basePath: /
definitions:
  models.Book:
    properties:
      author:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: tommychu2256@gmail.com
    name: Tommy Chu
  description: This is a sample of a REST API
  license: {}
  title: Library Example API
  version: "1.0"
paths:
  /books:
    get:
      description: find all books in the database and serve it
      produces:
      - application/json
      responses:
        "200":
          description: Books retrieved
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "400":
          description: Bad JSON
          schema:
            type: string
        "500":
          description: JSON unmarshal error
          schema:
            type: string
      summary: return all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: validate a new book and insert it into the database
      parameters:
      - description: The book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: Book creates
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad JSON
          schema:
            type: string
        "500":
          description: JSON unmarshal error
          schema:
            type: string
      summary: create a new book
      tags:
      - books
  /books/{id}:
    delete:
      description: find a book and delete it
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Book deleted
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad JSON
          schema:
            type: string
        "500":
          description: JSON unmarshal error
          schema:
            type: string
      summary: remove a book
      tags:
      - books
    get:
      description: find a book by id and serve it
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Book retrived
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad JSON
          schema:
            type: string
        "500":
          description: JSON unmarshal error
          schema:
            type: string
      summary: return a book
      tags:
      - books
    put:
      consumes:
      - application/json
      description: find a book and update it with new values
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: The book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: Book updated
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad JSON
          schema:
            type: string
        "500":
          description: JSON unmarshal error
          schema:
            type: string
      summary: update a book
      tags:
      - books
schemes:
- http
swagger: "2.0"
