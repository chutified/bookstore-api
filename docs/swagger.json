{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample of a Gin API framework.",
        "title": "Bookstore API example with Gin",
        "contact": {
            "name": "Tommy Chu",
            "email": "tommychu2256@gmail.com"
        },
        "license": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/books": {
            "get": {
                "description": "Get all books from the database that are not marked as deleted.",
                "produces": [
                    "application/json"
                ],
                "summary": "List books",
                "responses": {
                    "200": {
                        "description": "listed - ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Book"
                            }
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.AppErrors"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book with unique SKU.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create book",
                "parameters": [
                    {
                        "description": "book struct",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book created - ok",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.AppErrors"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Get a book by its ID that is not marked as deleted.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "got - ok",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.AppErrors"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.AppErrors"
                        }
                    }
                }
            },
            "put": {
                "description": "Find a book by its ID and update it with changed fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "book struct",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated - ok",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.AppErrors"
                        }
                    }
                }
            },
            "delete": {
                "description": "Find a book by its ID and deletes it.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete book.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted book id - ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.AppErrors"
                        }
                    }
                }
            }
        },
        "/books/{id}/recover": {
            "post": {
                "description": "Find a book by its ID and remove a deleted tag from it.",
                "produces": [
                    "application/json"
                ],
                "summary": "Recover deleted book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recovered - ok",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.AppErrors"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AppErrors": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}